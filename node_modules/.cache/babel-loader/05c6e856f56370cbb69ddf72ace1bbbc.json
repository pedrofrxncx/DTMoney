{"ast":null,"code":"var _jsxFileName = \"E:\\\\Pasta Usu\\xE1rios\\\\Pedro\\\\Desktop\\\\Ignite\\\\reactjs\\\\II\\\\dtmoney\\\\src\\\\TransactionsContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from 'react';\nimport { api } from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionsContext = /*#__PURE__*/createContext([]);\nexport function TransactionsProvider() {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    api.get('transactions').then(response => setTransactions(response.data.transactions));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TransactionsContext.Provider, {\n    value: transactions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionsProvider, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n\n_c = TransactionsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsProvider\");","map":{"version":3,"sources":["E:/Pasta Usu√°rios/Pedro/Desktop/Ignite/reactjs/II/dtmoney/src/TransactionsContext.tsx"],"names":["createContext","useEffect","useState","api","TransactionsContext","TransactionsProvider","transactions","setTransactions","get","then","response","data"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,GAAT,QAAoB,gBAApB;;AAYA,OAAO,MAAMC,mBAAmB,gBAAGJ,aAAa,CAAgB,EAAhB,CAAzC;AAEP,OAAO,SAASK,oBAAT,GAAgC;AAAA;;AACrC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAgB,EAAhB,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,GAAG,CAACK,GAAJ,CAAQ,cAAR,EACCC,IADD,CACMC,QAAQ,IAAIH,eAAe,CAACG,QAAQ,CAACC,IAAT,CAAcL,YAAf,CADjC;AAED,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAEA;AAArC;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAbeD,oB;;KAAAA,oB","sourcesContent":["import { createContext, useEffect, useState } from 'react'\r\nimport { api } from './services/api'\r\n\r\ninterface Transaction {\r\n  id: number,\r\n  title: string,\r\n  amount: number,\r\n  type: string,\r\n  category: string,\r\n  createdAt: string\r\n}\r\n\r\n\r\nexport const TransactionsContext = createContext<Transaction[]>([])\r\n\r\nexport function TransactionsProvider() {\r\n  const [transactions, setTransactions] = useState<Transaction[]>([])\r\n\r\n  useEffect(() => {\r\n    api.get('transactions')\r\n    .then(response => setTransactions(response.data.transactions))\r\n  }, [])\r\n\r\n  return (\r\n    <TransactionsContext.Provider value={transactions}>\r\n\r\n    </TransactionsContext.Provider>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}