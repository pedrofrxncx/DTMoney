{"ast":null,"code":"var _jsxFileName = \"E:\\\\Pasta Usu\\xE1rios\\\\Pedro\\\\Desktop\\\\Ignite\\\\reactjs\\\\II\\\\dtmoney\\\\src\\\\components\\\\TransactionsTable\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { api } from \"../../services/api\";\nimport { Container } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TransactionsTable() {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    api.get('transactions').then(response => setTransactions(response.data.transactions));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: transaction.type,\n            children: new Intl.NumberFormat('en-US', {\n              style: 'currency',\n              currency: 'USD'\n            }).format(transaction.amount)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.createdAt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, transaction.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionsTable, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n\n_c = TransactionsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsTable\");","map":{"version":3,"sources":["E:/Pasta Usu√°rios/Pedro/Desktop/Ignite/reactjs/II/dtmoney/src/components/TransactionsTable/index.tsx"],"names":["useEffect","useState","api","Container","TransactionsTable","transactions","setTransactions","get","then","response","data","map","transaction","title","type","Intl","NumberFormat","style","currency","format","amount","category","createdAt","id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,SAAT,QAA0B,UAA1B;;AAWA,OAAO,SAASC,iBAAT,GAA6B;AAAA;;AAClC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAgB,EAAhB,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,GAAG,CAACK,GAAJ,CAAQ,cAAR,EACCC,IADD,CACMC,QAAQ,IAAIH,eAAe,CAACG,QAAQ,CAACC,IAAT,CAAcL,YAAf,CADjC;AAED,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE,QAAC,SAAD;AAAA,2BACE;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAA,kBACGA,YAAY,CAACM,GAAb,CAAiBC,WAAW,iBACzB;AAAA,kCACA;AAAA,sBAAKA,WAAW,CAACC;AAAjB;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAI,YAAA,SAAS,EAAED,WAAW,CAACE,IAA3B;AAAA,sBACG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC9BC,cAAAA,KAAK,EAAE,UADuB;AAE9BC,cAAAA,QAAQ,EAAE;AAFoB,aAA/B,EAGEC,MAHF,CAGSP,WAAW,CAACQ,MAHrB;AADH;AAAA;AAAA;AAAA;AAAA,kBAFA,eAQA;AAAA,sBAAKR,WAAW,CAACS;AAAjB;AAAA;AAAA;AAAA;AAAA,kBARA,eASA;AAAA,sBAAKT,WAAW,CAACU;AAAjB;AAAA;AAAA;AAAA;AAAA,kBATA;AAAA,WAASV,WAAW,CAACW,EAArB;AAAA;AAAA;AAAA;AAAA,gBADH;AADH;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GAtCenB,iB;;KAAAA,iB","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { api } from \"../../services/api\";\r\nimport { Container } from \"./styles\";\r\n\r\ninterface Transaction {\r\n  id: number,\r\n  title: string,\r\n  amount: number,\r\n  type: string,\r\n  category: string,\r\n  createdAt: string\r\n}\r\n\r\nexport function TransactionsTable() {\r\n  const [transactions, setTransactions] = useState<Transaction[]>([])\r\n\r\n  useEffect(() => {\r\n    api.get('transactions')\r\n    .then(response => setTransactions(response.data.transactions))\r\n  }, [])\r\n\r\n  return (\r\n    <Container>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Title</th>\r\n            <th>Value</th>\r\n            <th>Category</th>\r\n            <th>Date</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {transactions.map(transaction => (\r\n              <tr key={transaction.id}>\r\n              <td>{transaction.title}</td>\r\n              <td className={transaction.type}>\r\n                {new Intl.NumberFormat('en-US', {\r\n                  style: 'currency',\r\n                  currency: 'USD'\r\n                }).format(transaction.amount)}\r\n              </td>\r\n              <td>{transaction.category}</td>\r\n              <td>{transaction.createdAt}</td>\r\n            </tr>\r\n            ))}\r\n        </tbody>\r\n      </table>\r\n    </Container>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}